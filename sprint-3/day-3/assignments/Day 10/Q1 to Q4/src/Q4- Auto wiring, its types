Q4/- What is auto wiring in Spring, how many types of Auto wiring are there in spring,
explain with an example.

Answer-

-If spring container on its own detects the dependencies implicitly and injecting them
into the dependent bean is know as "Auto-wiring"

-To instruct the spring container to perform auto-wiring for a particular bean, we make
use of the "autowire" attribute inside the <bean> tag with any one of following values-
1.no (default)
2.byName
3.byType
4.constructor

In bean auto-wiring, spring container automatically injects a bean dependencies by either calling a setter
method or calling parameterized constructor without writing explicitly inside the
spring configuration file.

-byName: 
The byName mode injects the object dependency according to name of the bean. In such case, 
property name and bean name must be same. It internally calls setter method.
If the dependency is unmatched , container does not inject that dependency . its means property remains
with null value.
Example:
<bean id="b" class="org.sssit.B"></bean>  
<bean id="a" class="org.sssit.A" autowire="byName"></bean>  

-byType:
The byType mode injects the object dependency according to type. So property name and bean name 
can be different. It internally calls setter method.
Example-
<bean id="b1" class="org.sssit.B"></bean>  
<bean id="a" class="org.sssit.A" autowire="byType"></bean>  

-constructor:
The constructor mode injects the dependency by calling the constructor of the class. 
It calls the constructor having large number of parameters.
Example-
<bean id="b" class="org.sssit.B"></bean>  
<bean id="a" class="org.sssit.A" autowire="constructor"></bean>  

-no autowiring mode:
In case of no autowiring mode, spring container doesn't inject the dependency by autowiring.
<bean id="b" class="org.sssit.B"></bean>  
<bean id="a" class="org.sssit.A" autowire="no"></bean>  

















